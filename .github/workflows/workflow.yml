# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v2
      # - name: Setup
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "14"
      #     registry-url: https://registry.npmjs.org
      # - name: Install grunt
      #   run: npm install grunt -g
      # - name: install
      #  run: npm install
      # Runs a single command using the runners shell
      # - name: Build
      # run: grunt
      - name: Build
        run: echo Build Command

  unit-testing:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
          registry-url: https://registry.npmjs.org
      - name: Install dependencies
        run: |
          npm install -g karma
          npm install -g jasmine
          npm install -g requirejs
          npm install -g bower
          bower install
          npm install          
      - name: Testes unit√°rios
        run: npm run test
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - uses: actions/checkout@v2
      - name: Installing dependencies
        run: |
          npm install -g bower
          bower install
      - name: "Deploy to Vercel"
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi
          npx vercel --token ${VERCEL_TOKEN} $prodRun
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  deploy-heroku:
    runs-on: ubuntu-latest
    needs: unit-testing
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: Login in Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a movit-angularjs web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a movit-angularjs web
